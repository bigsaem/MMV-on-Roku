<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright 2016 Roku Corp.  All Rights Reserved. -->
<component name="GetEpisodes" extends="Task">
  <interface>
    <field id = "contenturi" type = "string" />
    <field id = "seasonUrl" type = "string" />
    <field id = "seasonCount" type = "integer" />
    <field id = "result2" type = "roArray" />
    <field id="showName" type="string"/>
	<field id="isCached" type="bool"/>
    <field id = "content" type = "assocarray" />
    <field id="apiNode" type = "assocarray" />
  </interface>
  <script type="text/brightscript">
    
  <![CDATA[
  
  	sub init()
  		m.top.functionName = "getAPIResponse"
  	end sub
  	
  	sub getAPIResponse()	
  		
  		
  		'This checks to see if the api for this show has been called before
  		'If it was called previously, then no new API call is made and instead
  		'The contents are retreived from the node that saves all api calls
  		if m.top.content <> invalid
  			if m.top.apiNode.DoesExist(m.top.showName)
  				for each show in m.top.apiNode.keys()
  					if show = m.top.showName
			  			m.top.content = m.top.apiNode[show]
  					end if
  				end for
  			end if
  		end if
  		
  		'The following lines prepare the required variables for the API call
  		port = CreateObject("roMessagePort")
    	req = CreateObject("roUrlTransfer")
    	req.setRequest("GET")
    	req.setURL(m.top.seasonUrl)
    	req.AddHeader("auth", "KPBR41wti28eGnLvVuQikPnPOVpv2TCk")
    	jsonTaskString = req.GetToString()
    	jsonTaskParsed = ParseJson(jsonTaskString)
    	errorArray = CreateObject("roAssociativeArray")
    	
    	'If there was an issue with the API call, show the error screen
    	'Else continue with the next API call for the season to get the episodes
    	if jsonTaskString = "" or jsonTaskParsed = invalid
    		'If there is an error with the API call
    		errorLabel:    		
    		screen = CreateObject("roSGScreen")
        	scene = screen.CreateScene("ErrorScene")
        	port = CreateObject("roMessagePort")
        	screen.SetMessagePort(port)
        	screen.Show()
        	while true
            	msg = Wait(0, port)
            	? "------------------"
            	? "msg = ";
        	end while	
    	else    	
	    	indexOfChild = 1
	    	seasonsArray = CreateObject("roAssociativeArray")
	     	for each season in jsonTaskParsed._embedded.items
	     	
	        	episodesAPI = season._links.episodes.href
	        	req.setUrl(episodesAPI)
	    		jsonTaskString = req.GetToString()
	    		jsonTaskParsed = ParseJson(jsonTaskString)
	    			    		
	    		'If there was an error with the episodes API call
	    		if jsonTaskString = "" or jsonTaskParsed = invalid
	    			Goto errorLabel
	    		end if
	    		
	    		seasonsArray.AddReplace("Season" + indexOfChild.toStr(), jsonTaskParsed)
	    		indexOfChild++   	
	    		
	    	end for		

	    	'This techincally runs the first time only. after that it always goes to the "else" block
	    	'It is checking if the apiNode was created. If it's not created then create a new one,
	    	'If it was previously created, then pass the apiNode to apiArray so that we can add new shows to it
	    	'then assign the array back to the node therefore we can cache everyseason the user opens
	    	if m.top.apiNode = invalid
	        	apiArray =  CreateObject("roAssociativeArray")
	        else
	        	apiArray = m.top.apiNode
	        end if
	    		    	
	    	apiArray.AddReplace(m.top.showName, seasonsArray)
	    	m.top.apiNode = apiArray	    	
	    	m.top.content = seasonsArray

    	end if
   	end sub
  ]]> 
  </script>
</component>
