<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright 2016 Roku Corp.  All Rights Reserved. -->
<component name="GetEpisodes" extends="Task">
  <interface>
    <field id = "contenturi" type = "string" />
    <field id = "seasonUrl" type = "string" />
    <field id = "seasonCount" type = "integer" />
    <field id = "result2" type = "roArray" />
    <field id="showName" type="string"/>
	<field id="isCached" type="bool"/>
    <field id = "content" type = "assocarray" />
  </interface>
  <script type="text/brightscript">
    
  <![CDATA[
  
  	sub init()
  		m.top.functionName = "getAPIResponse"
  	end sub
  	
  	sub getAPIResponse()
  		print "*******showname****"
  		print m.top.showName
  		

  			
  		if m.top.content <> invalid
  		for each season in m.top.content.keys()
            for each episode in m.top.content[Season]._embedded.items
  				if m.top.showName = episode.metadata.series_name
  					m.top.content = m.top.content
  					m.top.isCached = true
  					return
  				end if
  				'print episode.series_name
  			end for
  		end for
  		
  			'print m.top.content.Season1._embedded.items.title
  		end if
  		
  		'if m.top.content <> invalid and
  		   	
  		port = CreateObject("roMessagePort")
    	req = CreateObject("roUrlTransfer")
    	req.setRequest("GET")
    	req.setURL(m.top.seasonUrl)
    	'req.setURL(m.top.contenturi)    	
    	req.AddHeader("auth", "KPBR41wti28eGnLvVuQikPnPOVpv2TCk")
    	jsonTaskString = req.GetToString()
    	jsonTaskParsed = ParseJson(jsonTaskString)
    	errorArray = CreateObject("roAssociativeArray")
    	
    	if jsonTaskString = "" or jsonTaskParsed = invalid
    		'If there is an error with the API call
    		errorLabel:    		
    		screen = CreateObject("roSGScreen")
        	scene = screen.CreateScene("ErrorScene")
        	port = CreateObject("roMessagePort")
        	screen.SetMessagePort(port)
        	screen.Show()
        	while true
            	msg = Wait(0, port)
            	? "------------------"
            	? "msg = ";
        	end while
        	
    		
    	else    	
	    	indexOfChild = 1
	    	seasonsArray = CreateObject("roAssociativeArray")
	    	
	     	for each season in jsonTaskParsed._embedded.items
	     	
	        	episodesAPI = season._links.episodes.href
	        	req.setUrl(episodesAPI)
	    		jsonTaskString = req.GetToString()
	    		jsonTaskParsed = ParseJson(jsonTaskString)
	    		
	    		print "API"
	    		if jsonTaskString = "" or jsonTaskParsed = invalid
	    			Goto errorLabel
	    		end if
	    		
	    		seasonsArray.AddReplace("Season" + indexOfChild.toStr(), jsonTaskParsed)
	    		indexOfChild++   	
	    		
	    	end for		
	    		
	    	m.top.content = seasonsArray
    	end if
    	
    	endLabel:
  	end sub
  ]]> 
  </script>
</component>
